version: "3.8"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - nz

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test:
        [
          "CMD",
          "kafka-topics",
          "--bootstrap-server",
          "kafka:9092",
          "--list",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - nz

  python-server:
    build:
      context: ./server
      dockerfile: Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - nz
   

  admin:
    build:
      context: ./KafkaFolder/admin
    container_name: kafka-admin
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKER: kafka:9092
    healthcheck:
      test: ["CMD-SHELL", "python3 -c 'from kafka.admin import KafkaAdminClient; KafkaAdminClient(bootstrap_servers=\"kafka:9092\").list_topics()'"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - nz


  consumer:
    build:
      context: ./KafkaFolder/consumer
    container_name: kafka-consumer
    depends_on:
      kafka:
        condition: service_healthy
      admin:
        condition: service_healthy
    environment:
      KAFKA_BROKER: kafka:9092
    networks:
      - nz


networks:
  nz:
    driver: bridge
